- name: Docker network creation
  docker_network:
    name: "allspark"

- name: Create traefik data certs folder
  file:
    state: directory
    path: "{{ allspark_root_directory }}/data/secrets/traefik/certs"
  when: allspark_traefik.selfsigned

- name: create self-signed SSL key
  shell: openssl genrsa -out "{{ allspark_root_directory }}/data/secrets/traefik/certs/traefik.key" 2048
  args:
    creates: "{{ allspark_root_directory }}/data/secrets/traefik/certs/traefik.key"
  when: allspark_traefik.selfsigned

- name: create self-signed SSL csr
  shell: openssl req -new -nodes -subj "/C="{{ allspark_country }}"/ST="{{ allspark_state }}"/L="{{ allspark_location }}"/O="{{ allspark_organisation }}"/CN="{{ allspark_common_name }}"" -out "{{ allspark_root_directory }}/data/secrets/traefik/certs/traefik.csr"
  args:
    creates: "{{ allspark_root_directory }}/data/secrets/traefik/certs/traefik.csr"
  when: allspark_traefik.selfsigned

- name: create self-signed SSL cert
  shell: openssl x509 -req -days 365 -in "{{ allspark_root_directory }}/data/secrets/traefik/certs/traefik.csr" -signkey "{{ allspark_root_directory }}/data/secrets/traefik/certs/traefik.key" -out "{{ allspark_root_directory }}/data/secrets/traefik/certs/traefik.cert"
  args:
    creates: "{{ allspark_root_directory }}/data/secrets/traefik/certs/traefik.cert"
  when: allspark_traefik.selfsigned

- name: create self-signed SSL info
  shell: openssl x509 -noout -fingerprint -text < "{{ allspark_root_directory }}/data/secrets/traefik/certs/traefik.cert" > "{{ allspark_root_directory }}/data/secrets/traefik/certs/traefik.info"
  args:
    creates: "{{ allspark_root_directory }}/data/secrets/traefik/certs/traefik.info"
  when: allspark_traefik.selfsigned

- name: create self-signed SSL crt
  shell: cat "{{ allspark_root_directory }}/data/secrets/traefik/certs/traefik.cert" "{{ allspark_root_directory }}/data/secrets/traefik/certs/traefik.key" > "{{ allspark_root_directory }}/data/secrets/traefik/certs/traefik.crt"
  args:
    creates: "{{ allspark_root_directory }}/data/secrets/traefik/certs/traefik.crt"
  when: allspark_traefik.selfsigned

- name: Create traefik config folder
  file:
    state: directory
    path: "{{ allspark_root_directory }}/config/traefik"

- name: Prepare Traefik configuration
  template:
    src: templates/traefik.toml.j2
    dest: "{{ allspark_root_directory }}/config/traefik/traefik.toml"

- name: Setup ingress manager
  docker_container:
    name: traefik
    image: "{{ allspark_traefik.image }}"
    volumes:
      - "{{ allspark_root_directory }}/config/traefik/traefik.toml:/etc/traefik/traefik.toml"
      {% if allspark_traefik.selfsigned %}
      - "{{ allspark_root_directory }}/data/secrets/traefik/certs/traefik.crt:/certs/traefik.crt"
      - "{{ allspark_root_directory }}/data/secrets/traefik/certs/traefik.key:/certs/traefik.key"
      {% endif %}
      - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
      - "80:80"
      {% if 'allspark_traefik.selfsigned' %}
      - "443:443"
      {% endif %}
    networks:
      - name: allspark
    labels:
      "traefik.backend": "traefik"
      "traefik.port": "8080"
      "traefik.frontend.rule": "Host:ingress.{{ allspark_root_domain }}"
      "traefik.enable": "true"
    restart_policy: always
