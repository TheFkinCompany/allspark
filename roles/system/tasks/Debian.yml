<<<<<<< HEAD
<<<<<<< HEAD
---


<<<<<<< HEAD
- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Install Specific OS Release dependency"
<<<<<<< HEAD
  include_tasks: 
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
=======
  include_tasks: "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
>>>>>>> 7fe2af1... Update System Playbook

=======
>>>>>>> 98d8990... Update from review
# Ubuntu : You can found this list on the docker official website : https://docs.docker.com/install/linux/docker-ce/ubuntu/

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Ensure old versions of Docker are not installed"
  package:
    name: "{{ oldrelease }}"
    state: absent
  vars:
    oldrelease:
    - docker
    - docker-engine
    - docker.io
  become: yes

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Ensure dependencies are installed"
  package:
    name: "{{ dependency }}"
    state: present
    update_cache: yes
    autoclean: yes
    autoremove: yes
  vars:
    dependency:
    - apt-transport-https
    - ca-certificates
    - software-properties-common
    - python-pip
  become: yes
=======
- include_tasks: "{{ specification_os }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
  loop_control:
    loop_var: specification_os

- name: Ensure old versions of Docker are not installed
=======
---

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Install Specific OS Release dependency"
  include_tasks: 
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"

# You can found this list on the docker official website : https://docs.docker.com/install/linux/docker-ce/ubuntu/
- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Ensure old versions of Docker are not installed"
>>>>>>> 84ac31e... Update System Playbook
  package:
    name: "{{ item }}"
    state: absent
  with_items:
    - docker
    - docker-engine
    - docker.io
  become: true

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Ensure dependencies are installed"
  apt:
    name: "{{ item }}"
    state: present
    update-cache: yes
  with_items:
      - apt-transport-https
      - ca-certificates
      - software-properties-common
      - python-pip
  become: true
>>>>>>> 6c48f47... Update Sys Playbook

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Update pip"
  pip:
    name: pip
    extra_args: -U
<<<<<<< HEAD
  become: yes

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Install Specific OS Release dependencies"
  include_tasks: "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
  when:
    - ansible_distribution != "Debian"

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Add Docker apt key"
  apt_key:
<<<<<<< HEAD
    url: "{{ allspark_ubuntu_docker_url }}"
    id: "{{ allspark_ubuntu_docker_id }}"
=======
    url: "{{ allspark_debian_docker_url }}"
>>>>>>> 98d8990... Update from review
    state: present
  register: add_repository_key
  ignore_errors: true
  become: yes
  when:
    - ansible_distribution != "Ubuntu"

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Standart Add repo Failed - Intsall curl to use alternative method"
  package:
    name: curl
    state: present
  become: yes
  when: 
    - add_repository_key is failed
    - ansible_distribution != "Ubuntu"

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Add Docker apt key (alternative for older systems without SNI)"
  shell: "curl -sSL {{ allspark_debian_docker_url }} | sudo apt-key add -"
  args:
    warn: no
  when: 
    - add_repository_key is failed
    - ansible_distribution != "Ubuntu"
  become: yes

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Add Docker repository"
  apt_repository:
    repo: "deb [arch=amd64] {{ allspark_debian_repo }} {{ ansible_distribution_release }} stable"
    state: present
  when:
    - ansible_distribution != "Ubuntu"
  become: yes

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Install Docker Community Edition"
  package:
    pkg: "docker-ce={{ allspark_docker_version }}*"
    state: present
    update_cache: yes
    autoclean: yes
    autoremove: yes
  become: yes
=======
  become: true

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Add Docker apt key"
  apt_key:
    url: "{{ allspark_ubuntu_docker_url }}"
    id: "{{ allspark_ubuntu_docker_id }}"
    state: present
  register: add_repository_key
  ignore_errors: true
  become: true

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Standart Add repo Failed - Intsall curl to use alternative method"
  apt:
    name: curl
    state: present
    update-cache: yes
  become: true
  when: add_repository_key is failed

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Ensure curl is present (on older systems without SNI)"
  package: name=curl state=present
  when: add_repository_key is failed
  become: true

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Add Docker apt key (alternative for older systems without SNI)"
  shell: "curl -sSL {{ allspark_ubuntu_docker_url }} | sudo apt-key add -"
  args:
    warn: no
  when: add_repository_key is failed
  become: true

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Add Docker repository"
  apt_repository:
    repo: "deb [arch={{ ansible_architecture }}] {{ allspark_ubuntu_repo }} {{ ansible_distribution_release }} stable"
    state: present
    update_cache: yes
  become: true

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Install Docker"
  apt:
    pkg: "docker-ce={{ allspark_docker_version }}*"
    state: present
    update_cache: yes
  become: true
>>>>>>> 6c48f47... Update Sys Playbook

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Start Docker service"
  service:
    name: docker
<<<<<<< HEAD
<<<<<<< HEAD
    state: started
    enabled: yes
  become: yes
<<<<<<< HEAD
=======
    state: restarted
=======
    state: started
>>>>>>> 42d523c... Correction apply from review
    enabled: yes
  become: true
>>>>>>> 6c48f47... Update Sys Playbook

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Add user to docker group"
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true
  register: user_task
<<<<<<< HEAD
  become: yes
=======
  become: true
>>>>>>> 6c48f47... Update Sys Playbook

# - name: Reset ssh connection
#   meta: reset_connection
#   when: user_task is changed
#   failed_when: false

# Below is an ugly hack, because of an issue with
# `meta: reset_connection`:
## ERROR! Cannot reset connection
## b'Control socket connect(/home/$USER/.ansible/cp/276d6f8b70): No such file or directory\r\n'
#
# So we use this trick to force ansible to reconnect
- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Remove cp dir to force ssh reconnection"
  file:
    path: ~/.ansible/cp
    state: absent
  delegate_to: localhost
  changed_when: false
  when: user_task is changed
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 2caf6d3... Update System Playbook
=======
>>>>>>> 6c48f47... Update Sys Playbook
=======

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} - Check if Systemd is present"
  apt:
    name: systemd
    state: present
  changed_when: false
  register: systemd_is_not_present

>>>>>>> 84ac31e... Update System Playbook
=======
>>>>>>> 42d523c... Correction apply from review
