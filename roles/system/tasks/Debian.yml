- include_tasks: "{{ specification_os }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
  loop_control:
    loop_var: specification_os

- name: Ensure old versions of Docker are not installed
  package:
    name: "{{ item }}"
    state: absent
  with_items:
    - docker
    - docker-engine
    - docker.io
  become: true

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Ensure dependencies are installed"
  apt:
    name: "{{ item }}"
    state: present
    update-cache: yes
  with_items:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python-pip
  become: true

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Update pip"
  pip:
    name: pip
    extra_args: -U
  become: true

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Add Docker apt key"
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    state: present
  register: add_repository_key
  ignore_errors: true
  become: true

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Ensure curl is present (on older systems without SNI)"
  package: name=curl state=present
  when: add_repository_key is failed
  become: true

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Add Docker apt key (alternative for older systems without SNI)"
  shell: "curl -sSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -"
  args:
    warn: no
  when: add_repository_key is failed
  become: true

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Add Docker repository"
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
    update_cache: yes
  become: true

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Install Docker"
  apt:
    pkg: "docker-ce={{ allspark_docker_version }}*"
    state: present
    update_cache: yes
  become: true

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Start Docker service"
  service:
    name: docker
    state: restarted
    enabled: yes
  become: true

- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Add user to docker group"
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true
  register: user_task
  become: true

# - name: Reset ssh connection
#   meta: reset_connection
#   when: user_task is changed
#   failed_when: false

# Below is an ugly hack, because of an issue with
# `meta: reset_connection`:
## ERROR! Cannot reset connection
## b'Control socket connect(/home/$USER/.ansible/cp/276d6f8b70): No such file or directory\r\n'
#
# So we use this trick to force ansible to reconnect
- name: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }} {{ ansible_distribution_release }} - Remove cp dir to force ssh reconnection"
  file:
    path: ~/.ansible/cp
    state: absent
  delegate_to: localhost
  changed_when: false
  when: user_task is changed
