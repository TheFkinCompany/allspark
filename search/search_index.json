{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Allspark","title":"Index"},{"location":"#allspark","text":"","title":"Allspark"},{"location":"architecture/","text":"Architecture Components Components Usage Gitlab Source code management Continuous integration / delivery Work planning Issue tracking Portainer Container management RocketChat Instant chat (Slack like) Grafana Monitoring Prometheus Metrics scraping / store CAdvisor Container metrics Node exporter System metrics Sonarqube Continuous Inspection HAProxy Reverse proxy Volumerize Backup and Restore solution for Docker volume backups MatterMost Default Instant Chat (Slack like) OS Compatibility Allspark is compatible with: - CentOS 7 or above - RedHat 7 or above - Fedora Server/Atomic 28 or above - Ubuntu 14.04 or above - Debian 8 or above Playbooks release.yml Package an Allspark release in a .tar.gz file setup.yml Load a packaged Allspark release into the system install.yml Install Allspark on the machine (either with an internet access or after using setup.yml playbook)","title":"Architecture"},{"location":"architecture/#architecture","text":"","title":"Architecture"},{"location":"architecture/#components","text":"Components Usage Gitlab Source code management Continuous integration / delivery Work planning Issue tracking Portainer Container management RocketChat Instant chat (Slack like) Grafana Monitoring Prometheus Metrics scraping / store CAdvisor Container metrics Node exporter System metrics Sonarqube Continuous Inspection HAProxy Reverse proxy Volumerize Backup and Restore solution for Docker volume backups MatterMost Default Instant Chat (Slack like)","title":"Components"},{"location":"architecture/#os-compatibility","text":"Allspark is compatible with: - CentOS 7 or above - RedHat 7 or above - Fedora Server/Atomic 28 or above - Ubuntu 14.04 or above - Debian 8 or above","title":"OS Compatibility"},{"location":"architecture/#playbooks","text":"release.yml Package an Allspark release in a .tar.gz file setup.yml Load a packaged Allspark release into the system install.yml Install Allspark on the machine (either with an internet access or after using setup.yml playbook)","title":"Playbooks"},{"location":"configuration/","text":"Configuration Group_vars Edit the file group_vars/all.yml to fit with your needs, like: The allspark_root_domain to use your domain name (each component will be exposed as a subdomain). The allspark_docker_version to choose the docker version you want. Enable or disable component using their enabled boolean toggle. allspark_monitoring : enabled : true HTTPS In order to provide HTTPS, you can either : Enable self signed certificates by activating the allspark_haproxy.ssl.enabled and allspark_haproxy.ssl.selfsigned.enabled flags. Import a certificate from your control machine : enable allspark_haproxy.ssl.enabled , set the allspark_haproxy.ssl.certificates_directory variable to a folder on the control machine containing PEM certificates named like their endpoint (e.g: infra.allspark.localhost.pem ) You can also do a mix of both, imported certificates will be picked over generated ones, allowing you to import certificates for some of the endpoints and let Allspark generate the missing ones. Note For wildcard and UCC certificates signing multiple domains, simply copy the file (or create a symbolic link pointing to it) to mirror the new endpoint e.g: cp infra.allspark.localhost.pem chat.allspark.localhost Downloads Note You can customize the image or tag for a component by overriding the component_image and component_tag , using either : Ansible extra vars Add those variables to your group_vars/all.yml file. e.g : gitlab # Change gitlab-ce to gitlab-ee gitlab_image : gitlab_ee gitlab_tag : latest You can access the complete list of available components in the roles/downloads/defaults/main.yml file.","title":"Configuration"},{"location":"configuration/#configuration","text":"","title":"Configuration"},{"location":"configuration/#group_vars","text":"Edit the file group_vars/all.yml to fit with your needs, like: The allspark_root_domain to use your domain name (each component will be exposed as a subdomain). The allspark_docker_version to choose the docker version you want. Enable or disable component using their enabled boolean toggle. allspark_monitoring : enabled : true","title":"Group_vars"},{"location":"configuration/#https","text":"In order to provide HTTPS, you can either : Enable self signed certificates by activating the allspark_haproxy.ssl.enabled and allspark_haproxy.ssl.selfsigned.enabled flags. Import a certificate from your control machine : enable allspark_haproxy.ssl.enabled , set the allspark_haproxy.ssl.certificates_directory variable to a folder on the control machine containing PEM certificates named like their endpoint (e.g: infra.allspark.localhost.pem ) You can also do a mix of both, imported certificates will be picked over generated ones, allowing you to import certificates for some of the endpoints and let Allspark generate the missing ones. Note For wildcard and UCC certificates signing multiple domains, simply copy the file (or create a symbolic link pointing to it) to mirror the new endpoint e.g: cp infra.allspark.localhost.pem chat.allspark.localhost","title":"HTTPS"},{"location":"configuration/#downloads","text":"Note You can customize the image or tag for a component by overriding the component_image and component_tag , using either : Ansible extra vars Add those variables to your group_vars/all.yml file. e.g : gitlab # Change gitlab-ce to gitlab-ee gitlab_image : gitlab_ee gitlab_tag : latest You can access the complete list of available components in the roles/downloads/defaults/main.yml file.","title":"Downloads"},{"location":"install/","text":"Installation guide Requirements On the allspark machine Docker ( tested with version 18.06.0 ) On the control machine Ansible ( tested with version 2.5.5 ) Ansible playbook If you are on to adapt the configuration see the configuration pages Warning For offline install, the images configuration must be the same on both end. If you are on a migration see the operation pages Online install Change the hosts file to point to the allspark machine. ansible-playbook -i hosts install.yml Warning Before using the playbook, you need to be sure to have your deployment user in the wheel groups At this point, you will be able to see component show up along with their access URL at ingress.YOUR_ROOT_DOMAIN . Offline install 0. On the online control machine Note Change the allspark_release_destination and allspark_release_tmp_directory to point to somwhere with at least 10Go of free space Bash ansible-playbook -i hosts release.yml hosts [all] localhost ansible_connection = local it will generate a .tar.gz file at allspark_release_destination . This file needs to be copied along with the group_vars directory to the offline allspark machine. 1. On the offline allspark machine Import the group_vars directory and the release .tar.gz Set the allspark_release_destination in the group_vars/all.yml file to point to the release. Set the allspark_release_tmp_directory to point to somwhere with at least 10Go of free space Bash ansible-playbook -i hosts setup.yml ansible-playbook -i hosts install.yml hosts [all] localhost ansible_connection = local Warning This playbook does not setup the system yet. The release is packaged along with CentOS RPM dependencies as well as pip wheels, but you will however have to install them yourself.","title":"Install"},{"location":"install/#installation-guide","text":"","title":"Installation guide"},{"location":"install/#requirements","text":"","title":"Requirements"},{"location":"install/#on-the-allspark-machine","text":"Docker ( tested with version 18.06.0 )","title":"On the allspark machine"},{"location":"install/#on-the-control-machine","text":"Ansible ( tested with version 2.5.5 )","title":"On the control machine"},{"location":"install/#ansible-playbook","text":"If you are on to adapt the configuration see the configuration pages Warning For offline install, the images configuration must be the same on both end. If you are on a migration see the operation pages","title":"Ansible playbook"},{"location":"install/#online-install","text":"Change the hosts file to point to the allspark machine. ansible-playbook -i hosts install.yml Warning Before using the playbook, you need to be sure to have your deployment user in the wheel groups At this point, you will be able to see component show up along with their access URL at ingress.YOUR_ROOT_DOMAIN .","title":"Online install"},{"location":"install/#offline-install","text":"","title":"Offline install"},{"location":"install/#0-on-the-online-control-machine","text":"Note Change the allspark_release_destination and allspark_release_tmp_directory to point to somwhere with at least 10Go of free space Bash ansible-playbook -i hosts release.yml hosts [all] localhost ansible_connection = local it will generate a .tar.gz file at allspark_release_destination . This file needs to be copied along with the group_vars directory to the offline allspark machine.","title":"0. On the online control machine"},{"location":"install/#1-on-the-offline-allspark-machine","text":"Import the group_vars directory and the release .tar.gz Set the allspark_release_destination in the group_vars/all.yml file to point to the release. Set the allspark_release_tmp_directory to point to somwhere with at least 10Go of free space Bash ansible-playbook -i hosts setup.yml ansible-playbook -i hosts install.yml hosts [all] localhost ansible_connection = local Warning This playbook does not setup the system yet. The release is packaged along with CentOS RPM dependencies as well as pip wheels, but you will however have to install them yourself.","title":"1. On the offline allspark machine"},{"location":"operation/","text":"Warning Pay attention when you launch the backup.yml or restore.yml because playbook automatically stop and start the container to keep all the data safe . Backup guide Requirements On the allspark machine Have an allspark instance running Ansible Backup playbook Launch the playbook to make your backup, like: ansible-playbook -i hosts backup.yml Note You can change the release destination (default: /opt/allspark/backup ) like so: ansible-playbook -i hosts backup.yml --extra-vars 'allspark_backup_directory=/tmp/allspark_backup' Restore guide Requirements On the allspark machine Have the same installation of your backup to be able to restore your release Warning Pay attention: A component disabled (on the allspark machine) won't be imported on restore restore needs a running instance Previous datas of the restored containers will be lost (and aligned on the backup ones) Ansible Restore playbook Launch the playbook Restore to make the restore ansible-playbook -i hosts restore.yml Note You can launch a dry-run mode if you want to test your backup to restore, like so: ansible-playbook -i hosts restore.yml --extra-vars 'allspark_restore_dry_run=true'","title":"Operation"},{"location":"operation/#backup-guide","text":"","title":"Backup guide"},{"location":"operation/#requirements","text":"","title":"Requirements"},{"location":"operation/#on-the-allspark-machine","text":"Have an allspark instance running","title":"On the allspark machine"},{"location":"operation/#ansible-backup-playbook","text":"Launch the playbook to make your backup, like: ansible-playbook -i hosts backup.yml Note You can change the release destination (default: /opt/allspark/backup ) like so: ansible-playbook -i hosts backup.yml --extra-vars 'allspark_backup_directory=/tmp/allspark_backup'","title":"Ansible Backup playbook"},{"location":"operation/#restore-guide","text":"","title":"Restore guide"},{"location":"operation/#requirements_1","text":"","title":"Requirements"},{"location":"operation/#on-the-allspark-machine_1","text":"Have the same installation of your backup to be able to restore your release Warning Pay attention: A component disabled (on the allspark machine) won't be imported on restore restore needs a running instance Previous datas of the restored containers will be lost (and aligned on the backup ones)","title":"On the allspark machine"},{"location":"operation/#ansible-restore-playbook","text":"Launch the playbook Restore to make the restore ansible-playbook -i hosts restore.yml Note You can launch a dry-run mode if you want to test your backup to restore, like so: ansible-playbook -i hosts restore.yml --extra-vars 'allspark_restore_dry_run=true'","title":"Ansible Restore playbook"},{"location":"roadmap/","text":"Roadmap","title":"Roadmap"},{"location":"roadmap/#roadmap","text":"","title":"Roadmap"},{"location":"troubleshooting/","text":"Troubleshooting Install TypeError : create_host_config () got an unexpected keyword argument 'init' (using verbose ansible mode) The issue is caused by incompatible docker-py and docker python libraries versions. See This ansible issue for more details. An easy fix being to downgrade your ansible install to v2.5.5 . Gitlab Issuer certificate is invalid $ git config --global http.sslVerify true $ git clone http://gitlab.allspark.domainename/root/test.git Cloning into 'test' ... fatal: unable to access 'http://gitlab.allspark. domainename/root/test.git/' : Issuer certificate is invalid. $ git config --global http.sslVerify false $ git clone https://gitlab.allspark.localhost/root/test.git","title":"Troubleshooting"},{"location":"troubleshooting/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"troubleshooting/#install","text":"TypeError : create_host_config () got an unexpected keyword argument 'init' (using verbose ansible mode) The issue is caused by incompatible docker-py and docker python libraries versions. See This ansible issue for more details. An easy fix being to downgrade your ansible install to v2.5.5 .","title":"Install"},{"location":"troubleshooting/#gitlab","text":"Issuer certificate is invalid $ git config --global http.sslVerify true $ git clone http://gitlab.allspark.domainename/root/test.git Cloning into 'test' ... fatal: unable to access 'http://gitlab.allspark. domainename/root/test.git/' : Issuer certificate is invalid. $ git config --global http.sslVerify false $ git clone https://gitlab.allspark.localhost/root/test.git","title":"Gitlab"}]}