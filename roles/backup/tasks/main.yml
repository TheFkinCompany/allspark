---

- name: Get docker volume list
  shell: docker volume ls | grep -i allspark | awk '{print $2}'
  register: volumes_list
  changed_when: false

- name: Verify Docker volumes
  docker_volume:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ volumes_list.stdout_lines }}"

- name: Get docker name list
  shell: docker ps -q --filter label=managedby=allspark | xargs -n 1 docker inspect --format \{\{' .Name '\}\} | sed 's/\// /' | tr -d '\r\n'
  register: names_list
  changed_when: false

- name: Starting creating Backup container
  docker_container:
    name: backup
    image: "{{ allspark_backup.image }}"
    volumes: >-
      [
      {% for volume in volumes_list.stdout_lines %}
      "{{ volume }}:/source/{{ volume }}:ro",
      {% endfor %}
      "/var/run/docker.sock:/var/run/docker.sock",
      "{{ allspark_backup_directory }}:/backup",
      ]
    env:
      VOLUMERIZE_SOURCE: '/source'
      VOLUMERIZE_TARGET: 'file:///backup'
      VOLUMERIZE_CONTAINERS: "{{ names_list.stdout }}"
    restart_policy: always

- name: Backup - Execution
  shell: docker exec backup backup
  when: allspark_backup.enabled

- name: Restore - Execution
  shell:  >-
    docker exec backup restore
    {% if allspark_restore.dry_run.enabled %}
    --dry-run
    {% endif %}
  when: allspark_restore.enabled
