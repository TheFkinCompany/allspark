- name: Docker volumes creation
  docker_volume:
    name: "allspark_portainer_data"

- name: Setup Portainer as infra service
  docker_container:
    name: portainer
    image: "{{ downloads.portainer.image }}:{{ downloads.portainer.tag }}"
    volumes:
      - "allspark_portainer_data:/data"
      - "/var/run/docker.sock:/var/run/docker.sock"
    command: --no-auth --no-analytics --host unix:///var/run/docker.sock
    networks:
      - name: allspark
    labels:
      "traefik.backend": "portainer"
      "traefik.frontend.rule": "Host:infra.{{ allspark_root_domain }}"
      "traefik.enable": "true"
    restart_policy: always

- name: Docker volumes creation
  docker_volume:
    name: "allspark_{{ item }}"
  with_items:
    - rocketchat_data
    - rocketchat_avatars
  when: allspark_rocketchat.enabled

- name: Setup MongoDB chat service database
  docker_container:
    name: rocketchat_database
    image: "{{ downloads.rocketchat_mongodb.image }}:{{ downloads.rocketchat_mongodb.tag }}"
    state: "{{ allspark_rocketchat.enabled and 'started' or 'absent'}}"
    networks:
      - name: allspark
    volumes:
      - "allspark_rocketchat_data:/data/db"
    labels:
      "heritage": "allspark"
    restart_policy: always

- name: Setup RocketChat service
  docker_container:
    name: rocketchat
    image: "{{ downloads.rocketchat.image }}:{{ downloads.rocketchat.tag }}"
    state: "{{ allspark_rocketchat.enabled and 'started' or 'absent'}}"
    env:
      MONGO_URL: mongodb://rocketchat_database/rocketchat
      ROOT_URL: "http://chat.{{ allspark_root_domain }}"
    volumes:
      - "allspark_rocketchat_avatars:/app/uploads"
    networks:
      - name: allspark
    labels:
      "traefik.backend": "rocketchat"
      "traefik.frontend.rule": "Host:chat.{{ allspark_root_domain }}"
      "traefik.enable": "true"
      "heritage": "allspark"
    restart_policy: always

- name: MatterMost config directory
  file:
    state: directory
    path: "{{ allspark_root_directory }}/config/mattermost"

- name: Generate Mattermost config
  template:
    src: templates/config.json.j2
    dest: "{{ allspark_root_directory }}/config/mattermost/config.json"
  when: allspark_mattermost.enabled

- name: Docker volumes creation
  docker_volume:
    name: "allspark_{{ item }}"
  with_items:
    - mattermost_data
    - mattermost_logs
    - mattermost_config
    - mattermost_postgres_data
    - mattermost_localtime
  when: allspark_mattermost.enabled

- name: Setup PostgreSQL chat service database
  docker_container:
    name: mattermost_database
    image: "{{ downloads.mattermost_postgresql.image }}:{{ downloads.mattermost_postgresql.tag }}"
    state: "{{ allspark_mattermost.enabled and 'started' or 'absent'}}"
    env:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mattermostdb
    networks:
      - name: allspark
    volumes:
      - "allspark_mattermost_postgres_data:/var/lib/postgresql/data"
      - "allspark_mattermost_localtime:/etc/localtime"
    restart_policy: always

- name: Setup MatterMost service
  docker_container:
    name: mattermost
    image: "{{ downloads.mattermost.image }}:{{ downloads.mattermost.tag }}"
    state: "{{ allspark_mattermost.enabled and 'started' or 'absent'}}"
    env:
      MM_USERNAME: admin
      MM_PASSWORD: password
      MM_DBNAME: mattermostdb
    volumes:
      - "allspark_mattermost_data:/mattermost/data"
      - "allspark_mattermost_logs:/mattermost/logs"
      - "allspark_mattermost_config:/mattermost/config/config.json"
      - "allspark_mattermost_localtime:/etc/localtime"
      - "{{ allspark_root_directory }}/config/mattermost/config.json:/mattermost/config/config.json"
    networks:
      - name: allspark
    labels:
      "traefik.backend": "mattermost"
      "traefik.frontend.rule": "Host:mattermost.{{ allspark_root_domain }}"
      "traefik.enable": "true"
    restart_policy: always

